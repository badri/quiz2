<?php

/**
 * @file
 * Sets up the base table for our entity and a table to store information about
 * the entity types.
 */


/**
 * Implements hook_schema().
 */
function quiz_schema() {
  $schema['quiz_attempt'] = array(
    'description' => 'The base table for quiz attempts.',
    'fields' => array(
      'quiz_attempt_id' => array(
        'description' => 'Primary Key: Identifier for a quiz.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'quiz' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The quiz id which was attempted.',
      ),
      'user' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The user who attempted this quiz.',
      ),
      'start_time' => array(
        'description' => 'The Unix timestamp when the quiz was attempted.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'end_time' => array(
        'description' => 'The Unix timestamp when the quiz was finished.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'questions' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => FALSE,
        'serialize' => TRUE,
        'description' => 'array which store the order of questions.',
      ),
      'is_complete' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'Whether the quiz attempt is complete or not. (0 = incomplete, 1 = complete)',
      ),
    ),
    'primary key' => array('quiz_attempt_id'),
  );

  return $schema;
}
